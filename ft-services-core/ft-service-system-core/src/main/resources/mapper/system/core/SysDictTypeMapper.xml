<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hhwy.system.core.mapper.SysDictTypeMapper">

	<resultMap type="com.hhwy.system.core.domain.SysDictType" id="SysDictTypeResult">
		<id     property="dictId"     column="dict_id"     />
		<id     property="parentId"     column="parent_id"     />
		<result property="dictName"   column="dict_name"   />
		<result property="dictType"   column="dict_type"   />
		<result property="status"     column="status"      />
		<result property="createUser"   column="create_user"   />
		<result property="createTime" column="create_time" />
		<result property="updateUser"   column="update_user"   />
		<result property="updateTime" column="update_time" />
	</resultMap>
	
	<sql id="selectDictTypeVo">
        select dict_id, parent_id, dict_name, dict_type, status, create_user, create_time, remark
		from sys_dict_type
    </sql>

	<select id="selectDictTypeList" parameterType="com.hhwy.system.core.domain.SysDictType" resultMap="SysDictTypeResult">
	    <include refid="selectDictTypeVo"/>
		<where>
		    <if test="dictName != null and dictName != ''">
				AND dict_name like concat('%', #{dictName}, '%')
			</if>
			<if test="status != null and status != ''">
				AND status = #{status}
			</if>
			<if test="dictType != null and dictType != ''">
				AND dict_type like concat('%', #{dictType}, '%')
			</if>
			<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
				and date_format(create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
			</if>
			<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
				and date_format(create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
			</if>
	    </where>
	</select>
	
	<select id="selectDictTypeAll" resultMap="SysDictTypeResult">
		<include refid="selectDictTypeVo"/>
	</select>
	
	<select id="selectDictTypeById" parameterType="Long" resultMap="SysDictTypeResult">
		<include refid="selectDictTypeVo"/>
		where dict_id = #{dictId}
	</select>
	
	<select id="selectDictTypeByType" parameterType="String" resultMap="SysDictTypeResult">
		<include refid="selectDictTypeVo"/>
		where dict_type = #{dictType}
	</select>
	
	<select id="checkDictTypeUnique" parameterType="String" resultMap="SysDictTypeResult">
		<include refid="selectDictTypeVo"/>
		where dict_type = #{dictType} limit 1
	</select>
	
	<delete id="deleteDictTypeById" parameterType="Long">
 		delete from sys_dict_type where dict_id = #{dictId}
 	</delete>
 	
 	<delete id="deleteDictTypeByIds" >
 		delete from sys_dict_type where dict_id in
 		<foreach collection="array" item="dictId" open="(" separator="," close=")">
 			#{dictId}
        </foreach> 
 	</delete>

 	<update id="updateDictType" parameterType="com.hhwy.system.core.domain.SysDictType">
 		update sys_dict_type
 		<set>
 			<if test="parentId != null and parentId != ''">parent_id = #{parentId},</if>
 			<if test="dictName != null and dictName != ''">dict_name = #{dictName},</if>
 			<if test="dictType != null and dictType != ''">dict_type = #{dictType},</if>
 			<if test="status != null">status = #{status},</if>
 			<if test="remark != null">remark = #{remark},</if>
 			<if test="updateUser != null and updateUser != ''">update_user = #{updateUser},</if>
 			update_time = sysdate()
 		</set>
 		where dict_id = #{dictId}
	</update>
 	
 	<insert id="insertDictType" parameterType="com.hhwy.system.core.domain.SysDictType">
 		insert into sys_dict_type(
 			<if test="parentId != null and parentId != ''">parent_id,</if>
 			<if test="dictName != null and dictName != ''">dict_name,</if>
 			<if test="dictType != null and dictType != ''">dict_type,</if>
 			<if test="status != null">status,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			<if test="createUser != null and createUser != ''">create_user,</if>
 			create_time
 		)values(
 			<if test="parentId != null and parentId != ''">#{parentId},</if>
 			<if test="dictName != null and dictName != ''">#{dictName},</if>
 			<if test="dictType != null and dictType != ''">#{dictType},</if>
 			<if test="status != null">#{status},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
 			<if test="createUser != null and createUser != ''">#{createUser},</if>
 			sysdate()
 		)
	</insert>

	<select id="selectOneLevelDictTypeList" parameterType="com.hhwy.system.core.domain.SysDictType" resultMap="SysDictTypeResult">
		select
			*,
			case hasChild is null when true then '1' else '0' end as isLeaf
		from
		(
		select
			a.*,
			b.dict_id as hasChild
		from
		(select * from sys_dict_type
		 where parent_id = 0
		    or parent_id is null
		) a
		left join
		(
			select dict_id from sys_dict_type
			where (parent_id = 0 or parent_id is null)
				and dict_id in (select parent_id from sys_dict_type)
		) b on
			a.dict_id = b.dict_id
		) c
	</select>

	<select id="selectAllDictTypeList" parameterType="com.hhwy.system.core.domain.SysDictType" resultMap="SysDictTypeResult">
		select
			*,
			case hasChild is null when true then '1' else '0' end as isLeaf
		from
		(
		select
			a.*,
			b.dict_id as hasChild
		from
		(select * from sys_dict_type
		 where 1 = 1
			<if test="dictId != null">
				and parent_id = #{dictId}
			</if>
			<if test="dictName != null and dictName != ''">
				and dict_name like concat('%', #{dictName}, '%')
			</if>
		) a
		left join
		(
			select dict_id,parent_id from sys_dict_type
			where dict_id in (select parent_id from sys_dict_type)
			<if test="dictId != null">
				and parent_id = #{dictId}
			</if>
			<if test="dictName != null and dictName != ''">
				and dict_name like concat('%', #{dictName}, '%')
			</if>
		) b on
			a.dict_id = b.dict_id
		) c
	</select>

	<select id="selectChildrenDictList" parameterType="com.hhwy.system.core.domain.SysDictType" resultMap="SysDictTypeResult">
		select
			*,
			case hasChild is null when true then '1' else '0' end as isLeaf
		from
		(
		select
			a.*,
			b.dict_id as hasChild
		from
		(select * from sys_dict_type
		 where parent_id = #{dictId}
		) a
		left join
		(
			select dict_id from sys_dict_type
			where parent_id = #{dictId}
				and dict_id in (
				select parent_id from sys_dict_type)
		) b on
			a.dict_id = b.dict_id
		) c
	</select>
	
</mapper> 